# 예산
def solution(d, budget):
    answer = 0
    
    # 부서에서 요구한 금액의 배열 정렬
    d.sort()
    
    # 최대한 많은 부서에 금액을 지원해주기 위해서는 요구 금액이 적은 부서부터 지원하면 된다.
    # 요구 금액을 오름차순으로 정렬한 후 요구 금액을 총 예산에서 빼면서 반복문을 돌려 예산이 -가 되거나 0이 되었을 경우 반복문을 빠져나와 
    # 지원할 수 있는 최대 부서 수를 반환한다.
    for price in d:
        budget -= price

        # 예산이 마이너스가 되었을 경우 결과값에 포함 되지 않고 반복문을 탈출하여야한다.
        if budget < 0:
            break
        answer += 1
        # 예산이 0이 되었을 경우는 정답에 1이 포함된 상태에서 반복문을 빠져나와야한다.
        if budget == 0:
            break
        
    
    return answer